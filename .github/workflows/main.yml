name: Samsung Firmware Update Checker with GoFile API Upload

on:
  workflow_dispatch:
    inputs:
      model:
        description: 'Device Model (e.g., SM-A155F)'
        required: true
        default: 'SM-A155F'
      region:
        description: 'Region Code / CSC (e.g., EUX, XSG, DBT)'
        required: true
        default: 'EUX'

jobs:
  check-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Setup .NET 8.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Clone SamsungFumoClient repository
        uses: actions/checkout@v4
        with:
          repository: 'timschneeb/SamsungFumoClient'
          path: 'SamsungFumoClient'

      - name: Run Firmware Check and Extract URL
        id: firmware_check
        working-directory: ./SamsungFumoClient
        run: |
          output=$(OPENSSL_CONF=openssl.custom dotnet run --project DemoClient -- --model ${{ github.event.inputs.model }} --region ${{ github.event.inputs.region }})
          echo "$output"
          
          download_url=$(echo "$output" | grep -oP 'http://\S+?Key-Pair-Id=\S+?(?=<)' | head -n 1)
          
          if [ -n "$download_url" ]; then
            echo "Download URL found."
            cleaned_url=$(echo "$download_url" | sed 's/&amp;/\&/g')
            echo "url=$cleaned_url" >> $GITHUB_OUTPUT
          else
            echo "Download URL not found."
            echo "url=" >> $GITHUB_OUTPUT
          fi

      - name: Download Firmware and Upload to GoFile
        if: steps.firmware_check.outputs.url != ''
        run: |
          echo "Downloading firmware from temporary URL..."
          wget -O firmware.bin "${{ steps.firmware_check.outputs.url }}"
          
          # التأكد من أن الملف تم كتابته بالكامل على القرص قبل المتابعة
          sync
          
          echo "Download complete. File size: $(ls -lh firmware.bin)"

          echo "Uploading firmware.bin to GoFile via API..."
          response=$(curl -X POST \
            -H "Authorization: Bearer lnVDBSuzPGzPzkA3je2EIKAqIccrW4ku" \
            -F "file=@firmware.bin" \
            https://upload.gofile.io/uploadfile)
            
          echo "========================================================"
          echo "GoFile API Response:"
          echo "$response"
          echo "========================================================"
          
          download_page=$(echo "$response" | grep -oP '"downloadPage":\s*"\K[^"]+')
          echo "Your direct download page is: $download_page"
          echo "========================================================"
